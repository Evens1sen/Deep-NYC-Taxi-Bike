../data-NYCTaxi/60min/taxi-timestamp-inflow.h5
Namespace(addtime=True, adjpath='../data-NYCZones/adjmatrix/W_adj_matrix.csv', adjtype='symnadj', batchsize=64, channel=4, dataname='NYC-Bike-inflow-timestamp', datatype=0, epoch=200, ex='typhoon-inflow', flowpath='../data-NYCTaxi/60min/taxi-timestamp-inflow.h5', gpu=7, graphnum=1, loss='MAE', lr=0.001, n_node=69, optimizer='Adam', patience=10, target=0, timestep_in=12, timestep_out=3, trainratio=0.8, trainvalsplit=0.125)
data.shape (17544, 69)
pred_NYC-Bike-inflow-timestamp_STGCN1_1_2201041647 training started Tue Jan  4 16:47:44 2022
getXSYS data.shape(17544, 69)
getXSYS XS.shape(14023, 1, 12, 69)
getXSYS YS.shape(14023, 1, 1, 69)
XS shape is (14023, 1, 12, 69)
YS shape is (14023, 1, 1, 69)
getXSYS data.shape(17544, 69)
getXSYS XS.shape(14023, 1, 12, 69)
getXSYS YS.shape(14023, 1, 1, 69)
getXSYS data.shape(17544, 69)
getXSYS XS.shape(14023, 1, 12, 69)
getXSYS YS.shape(14023, 1, 1, 69)
XS shape after is (14023, 2, 12, 69)
YS shape after is (14023, 1, 1, 69)
TRAIN XS.shape YS,shape (14023, 2, 12, 69) (14023, 1, 1, 69)
Model Training Started ... Tue Jan  4 16:47:44 2022
TIMESTEP_IN, TIMESTEP_OUT 12 1
torch.Size([1, 3, 69, 69])
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─st_conv_block: 1-1                     [-1, 64, 8, 69]           --
|    └─temporal_conv_layer: 2-1          [-1, 32, 10, 69]          --
|    |    └─align: 3-1                   [-1, 32, 12, 69]          --
|    |    └─Conv2d: 3-2                  [-1, 64, 10, 69]          448
|    └─ModuleList: 2                     []                        --
|    |    └─spatio_conv_layer: 3-3       [-1, 32, 10, 69]          3,104
|    └─linear: 2-2                       [-1, 32, 10, 69]          --
|    |    └─Conv2d: 3-4                  [-1, 32, 10, 69]          1,056
|    └─temporal_conv_layer: 2-3          [-1, 64, 8, 69]           --
|    |    └─align: 3-5                   [-1, 64, 10, 69]          --
|    |    └─Conv2d: 3-6                  [-1, 64, 8, 69]           6,208
|    └─LayerNorm: 2-4                    [-1, 8, 69, 64]           8,832
|    └─Dropout: 2-5                      [-1, 64, 8, 69]           --
├─st_conv_block: 1-2                     [-1, 64, 4, 69]           --
|    └─temporal_conv_layer: 2-6          [-1, 32, 6, 69]           --
|    |    └─align: 3-7                   [-1, 32, 8, 69]           2,080
|    |    └─Conv2d: 3-8                  [-1, 64, 6, 69]           12,352
|    └─ModuleList: 2                     []                        --
|    |    └─spatio_conv_layer: 3-9       [-1, 32, 6, 69]           3,104
|    └─linear: 2-7                       [-1, 32, 6, 69]           --
|    |    └─Conv2d: 3-10                 [-1, 32, 6, 69]           1,056
|    └─temporal_conv_layer: 2-8          [-1, 64, 4, 69]           --
|    |    └─align: 3-11                  [-1, 64, 6, 69]           --
|    |    └─Conv2d: 3-12                 [-1, 64, 4, 69]           6,208
|    └─LayerNorm: 2-9                    [-1, 4, 69, 64]           8,832
|    └─Dropout: 2-10                     [-1, 64, 4, 69]           --
├─output_layer: 1-3                      [-1, 1, 1, 69]            --
|    └─temporal_conv_layer: 2-11         [-1, 64, 1, 69]           --
|    |    └─align: 3-13                  [-1, 64, 4, 69]           --
|    |    └─Conv2d: 3-14                 [-1, 128, 1, 69]          32,896
|    └─LayerNorm: 2-12                   [-1, 1, 69, 64]           8,832
|    └─temporal_conv_layer: 2-13         [-1, 64, 1, 69]           --
|    |    └─align: 3-15                  [-1, 64, 1, 69]           --
|    |    └─Conv2d: 3-16                 [-1, 64, 1, 69]           4,160
|    └─Conv2d: 2-14                      [-1, 1, 1, 69]            65
==========================================================================================
Total params: 99,233
Trainable params: 99,233
Non-trainable params: 0
Total mult-adds (M): 15.41
==========================================================================================
Input size (MB): 0.01
Forward/backward pass size (MB): 2.16
Params size (MB): 0.38
Estimated Total Size (MB): 2.54
==========================================================================================
epoch 0 time used: 5  seconds  train loss: 0.3328942168409881 validation loss: 0.26998621986140814
epoch 1 time used: 5  seconds  train loss: 0.2778628009261401 validation loss: 0.2520970389187438
epoch 2 time used: 5  seconds  train loss: 0.26169242163499196 validation loss: 0.24743262371946184
epoch 3 time used: 5  seconds  train loss: 0.25545953228741813 validation loss: 0.23966901822900744
epoch 4 time used: 5  seconds  train loss: 0.24962236584933092 validation loss: 0.23977962487334192
Traceback (most recent call last):
  File "pred_STGCN.py", line 350, in <module>
    main()
  File "pred_STGCN.py", line 332, in main
    trainModel(MODELNAME, 'train', trainXS, trainYS)
  File "pred_STGCN.py", line 210, in trainModel
    loss_sum += loss.item() * y.shape[0]
KeyboardInterrupt
